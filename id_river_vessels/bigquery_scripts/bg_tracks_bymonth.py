import argparse
import googleapiclient
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
from oauth2client.client import GoogleCredentials
from datetime import datetime
import json



# After running this code, you have to upload the files to gcloud
# !gsutil -m cp *  gs://gfw-crowd/river/
# and then 
# gsutil -m acl set -R -a public-read gs://gfw-crowd/river/


#ranges of the years
year_range = [2015]
month_range =[i for i in range(1,13)]

# Grab the application's default credentials from the environment.
credentials = GoogleCredentials.get_application_default()
# Construct the service object for interacting with the BigQuery API.
bigquery_service = build('bigquery', 'v2', credentials=credentials)



#first query
'''
# Query to create the subtable we are going to select from:
SELECT lat, lon, speed, mmsi, timestamp FROM TABLE_DATE_RANGE([pipeline_normalize.], TIMESTAMP('2015-01-01'), TIMESTAMP('2015-12-31')) 
where mmsi in (267010021,366967640,269057408,367505770,477581600,203999327,413961936,412455390,267168000,366996080,366851250,244660073,345010030,211087743,413779267,367682130,366937040,413766165,244660360,413790909,413979753,413829474,413777098,413521140,413784139,211514140,413893000,413801945,413824096,413823514,808664168,514814000,370170000,366984180,367057370,413831093,413996682,413823601,413790301,413813096,413961301,211512760,413453680,413952938,413806175,413951241,413823918,413819373,413978287,270256000,413778785,413771406,413779089,413794658,413805206,413826012,412553970,413552560,413811461,413953900,413793224,413827421,413803337,413974073,412418190,261186310,413804286,413780051,413827566,412733000,412425010,413792801,312762000,413802174,413826623,413795331,413981938,413973986,413794382,413973417,413770331,372879000,413785998,244660717,413787875,413772055,413812908,413961902,413794909,413818027,413811254,413778851,413760448,413775835,413801647,413953113,244650869,413780352,413077030,413808025,413792522,413777355,413819438,413777417,413812652,441906000,413784964,413760814,413972528,413782376,412357040,413819608,413976243,412502540,413787476,413963568,413783618,413794405,413809739,413808953,413791278,413819096,413855917,413813082,413940365,413615000,211553330,413963997,413791479,413957835,413773228,413964973,413971066,413774853,413964127,413780618,413952638,413815205,413827288,413783337,413794467,413964392,413827735,413973889,413822424,413823538,413768848,413355150,413978527,413821431,413972173,413987031,413850163,413803586,413954433,413819656,413855827,413989907,413965748,413773731,413762495,413812753,413760869,413817683,413980123,412375550,413806165,413772083,413825000,413416390,413829726,413794812,413827195,413973583,412439570,413964028,367611460,413508160,413828525,413353940,413858942,413810047,413821235,413808125,413807196,413801402,413827446,514210000,413816815,413828665,413812924,514438000,413782444,413771745,413829708,371592000,413994615,413817042,413965376,413956467,413787406,413964816,413789105,413787071,413812741,413974748,413821081,413353890,413806878,412502550,413811037,413812138,413986394,413806304,413975862,413783723,413996359,413800616,147258369,227734020,413810013,413811435,413979316,413789725,413784282,566507000,413810716,413780786,413963998,413964935,229623000,244660065,413779775,412112015,371758000,413790959,413507110,413779598,413994693,413794528,538005160,370963000,477434100,413996245,413760471,413807561,413978119,413778444,244670275,413785293,413783957,413700074,413982097,413766754,249058000,413773159,477685900,414093000,413454260,373674000,413956891,413988537,413769838,413980855,900004474,533930000,405000135,412501180,413800049,600008305,413442070,244650959,413764977,413470530,356503000,235654664,412552940,477685200,211514790,538005085,244700114,356779000,412429060,477924000,371558000,366985540,367513420,249300300,203999358,211660140,412760780,366916920,413773674,413984799,367638240,211196560,366985050,211269090,211644170,366991790)
and lat is not null and lon is not null and timestamp is not null and speed is not null and lat<90 and lat>-90 and lon<180 and lon>-180 and lon !=0 and lat !=0
'''

#second query
'''
# second query, ignoring the amazon
SELECT
  mmsi,
  count(*) count
FROM
  TABLE_DATE_RANGE([pipeline_normalize.], TIMESTAMP('2015-01-01'), TIMESTAMP('2015-12-31'))
WHERE
  (lat < 40.65 and lat > 31.48 and lon < -86.56 and lon >-94.03) // mississippi
  or (lat < 0 and lat > -5 and lon < -50.70 and lon >-66.08) // amazon
  or (lat < 52.36 and lat > 46.7 and lon < 18.73 and lon >9.47) // europe
  // or (lat < 32.64 and lat > 30.7 and lon < 120.1 and lon >116.88) // ignore china
  and mmsi not in (267010021,366967640,269057408,367505770,477581600,203999327,413961936,412455390,267168000,366996080,366851250,244660073,345010030,211087743,413779267,367682130,366937040,413766165,244660360,413790909,413979753,413829474,413777098,413521140,413784139,211514140,413893000,413801945,413824096,413823514,808664168,514814000,370170000,366984180,367057370,413831093,413996682,413823601,413790301,413813096,413961301,211512760,413453680,413952938,413806175,413951241,413823918,413819373,413978287,270256000,413778785,413771406,413779089,413794658,413805206,413826012,412553970,413552560,413811461,413953900,413793224,413827421,413803337,413974073,412418190,261186310,413804286,413780051,413827566,412733000,412425010,413792801,312762000,413802174,413826623,413795331,413981938,413973986,413794382,413973417,413770331,372879000,413785998,244660717,413787875,413772055,413812908,413961902,413794909,413818027,413811254,413778851,413760448,413775835,413801647,413953113,244650869,413780352,413077030,413808025,413792522,413777355,413819438,413777417,413812652,441906000,413784964,413760814,413972528,413782376,412357040,413819608,413976243,412502540,413787476,413963568,413783618,413794405,413809739,413808953,413791278,413819096,413855917,413813082,413940365,413615000,211553330,413963997,413791479,413957835,413773228,413964973,413971066,413774853,413964127,413780618,413952638,413815205,413827288,413783337,413794467,413964392,413827735,413973889,413822424,413823538,413768848,413355150,413978527,413821431,413972173,413987031,413850163,413803586,413954433,413819656,413855827,413989907,413965748,413773731,413762495,413812753,413760869,413817683,413980123,412375550,413806165,413772083,413825000,413416390,413829726,413794812,413827195,413973583,412439570,413964028,367611460,413508160,413828525,413353940,413858942,413810047,413821235,413808125,413807196,413801402,413827446,514210000,413816815,413828665,413812924,514438000,413782444,413771745,413829708,371592000,413994615,413817042,413965376,413956467,413787406,413964816,413789105,413787071,413812741,413974748,413821081,413353890,413806878,412502550,413811037,413812138,413986394,413806304,413975862,413783723,413996359,413800616,147258369,227734020,413810013,413811435,413979316,413789725,413784282,566507000,413810716,413780786,413963998,413964935,229623000,244660065,413779775,412112015,371758000,413790959,413507110,413779598,413994693,413794528,538005160,370963000,477434100,413996245,413760471,413807561,413978119,413778444,244670275,413785293,413783957,413700074,413982097,413766754,249058000,413773159,477685900,414093000,413454260,373674000,413956891,413988537,413769838,413980855,900004474,533930000,405000135,412501180,413800049,600008305,413442070,244650959,413764977,413470530,356503000,235654664,412552940,477685200,211514790,538005085,244700114,356779000,412429060,477924000,371558000,366985540,367513420,249300300,203999358,211660140,412760780,366916920,413773674,413984799,367638240,211196560,366985050,211269090,211644170,366991790)
group by mmsi
having count > 200
limit 300
#

SELECT lat, lon, speed, mmsi, timestamp FROM TABLE_DATE_RANGE([pipeline_normalize.], TIMESTAMP('2015-01-01'), TIMESTAMP('2015-12-31')) 
where mmsi in (267210040,477013700,367011830,367143690,366995920,367522240,269057395,203999383,243070609,566179000,710001338,367113150,261186338,211464610,270338000,244870455,477944000,211475510,244710458,211002011,367573410,205512890,367054240,538002999,367653470,477325700,229346000,211171180,211483540,367005180,207261313,366988760,211169330,366963390,367522220,366984350,367327970,367583740,367475560,203999308,366999523,367057590,211624810,244660100,367486280,367399880,367192650,367694640,264163192,205523690,205461590,211661030,244690637,710000748,211482070,369494740,211540890,351674000,269057512,244670089,211629910,244650903,366995310,366995620,304812000,538004181,367168830,269057390,211554300,366996060,211169810,207072342,211190940,269057465,366999521,244790570,211481250,367003540,367143710,211668930,564700000,311050600,261182694,211549520,367343440,211510640,366993020,203999321,211512600,367054810,244670799,267010047,366996710,269064000,243000046,244250702,244670506,367014430,244750134,211515160,477962300,477617300,477963100,211511370,367481570,367533710,267010025,264162519,367600960,367622970,211169540,269057499,211507020,211535890,367575130,366919230,477048000,367641620,211509040,270252000,710000795,261182658,367433690,367396730,244670138,244710505,244670582,211555070,211437690,205408090,215892000,244660546,357262000,538005470,367595840,351696000,205376890,373756000,373886000,367373640,270311000,366967670,367456850,369970732,203999424,212049000,366967080,367451270,355960000,244790016,366963070,211660150,367638080,211623160,249562000,367567350,366799770,367611970,367430210,244750523,211511890,211470290,205347990,636015464,211478990,367324460,244030401,244660885,269057515,366961480,367398930,367402570,211431140,244670841,367092190,279202463,367380840,367561430,227720520,243071717,256897000,636017284,366821510,367532810,211509160,211169870,367004240,311553000,372268000,211309260,576646000,431127000,338188861,710000971,211509240,710001243,211589480,244750808,244630764,295530990,244670374,356927000,367554940,211209890,367374930,269057416,367421590,211633700,211563260,211182740,367456880,367541280,244660746,367622980,636015681,367468610,366963040,205308190,261183490,367687950,211661060,366990030,270461000,203999353,568859,710014660,710001313,367505040,211593640,211512080,369494743,261182698,211492880,367009590,538005483,338168433,538003102,367362240,338099677,244630147,244660036,244730899,367526570,366993510,367456350,367678150,367057840,366967510,367452870,3660684,211483650,211183340,203999352,244660366,243070814,366862710,367402450,367522430,366967460,264162120,3660863,367503760,211183290,238812840,366989950,211449050,367641580,3660554,264163228,253242366,367419040,269057521,203999315,244690277,710001349,211476540,244620284,244650891,279202540,215441000,356345000,642122014,367505110,244670532,210219000,244650899,279202242,267173000,366963490,211430730,264162038,367429570,367471910,367057860,367638250,211660310,272041600,229065000,366984840,256306000)
and lat is not null and lon is not null and timestamp is not null and speed is not null and lat<90 and lat>-90 and lon<180 and lon>-180 and lon !=0 and lat !=0

'''

#third query
'''
select 
mmsi, count
from (
    SELECT
      mmsi,
      count(*) count
    FROM
      TABLE_DATE_RANGE([pipeline_normalize.], TIMESTAMP('2015-01-01'), TIMESTAMP('2015-12-31'))
    WHERE
      (lat < 40.65 and lat > 31.48 and lon < -86.56 and lon >-94.03) // mississippi
      or (lat < 0 and lat > -5 and lon < -50.70 and lon >-66.08) // amazon
      or (lat < 52.36 and lat > 46.7 and lon < 18.73 and lon >9.47) // europe
      or (lat < 32.64 and lat > 30.7 and lon < 120.1 and lon >116.88) //  china
    group by mmsi
    having count > 200
    )
    where mmsi in (select mmsi from [scratch_global_fishing_raster.classification_20160324] 
                   where label in ('Longliner','Purse seine','Trawler','Pots and traps'))

'''

'''
SELECT lat, lon, speed, mmsi, timestamp FROM TABLE_DATE_RANGE([pipeline_normalize.], TIMESTAMP('2015-01-01'), TIMESTAMP('2015-12-31')) 
where mmsi in (413803633,413996548,412100000,412763490,413771358,413791546,413763382,413977032,413768003,413802872,413778834,413826357,356986000,413810079,413779571,211512460,413784842,413996851,413979766,413993056,413995596,413951715,413779313,100900012,538002411,413767172,413975824,367521810,413800072,413791444,308429000,413794697,413761506,413822933,267010070,413996275,123456789,413783129,413793855,413779827,413808539,413764909,413781794,413854231,413772426,413994115,413995231,413775244,412551330,413825119,565062000,413825138,710000759,413567822,413995235,413989465,412354420,413778100,413745689,413789584,413811491,413793159,413779914,413772156,413990301,710000972,413817091,413783354,413767215,413960932,413970908,413979506,413975527,413775463,222222222,413974057,413804598,413775067,413788073,413785698,203999399,413980711,413784866,434164405,413801179,413855589,413793761,413767375,413973471,413776721,413979948,710000649,267010072,413781552,987654321,100000000,413959157,413829271,1193046,413804434,413762034,412441226,367514620,413765853,413800433,413786573,413824089,413994144,710000989,413763573,413777773,413805768,413994409,413812525,413785985,211617370,413987655,413977066,413807081,413996944,338188861,413823907,413773504,211512450,413806725,413793487,710251000,413996066,413789567,413986337,413794627,413989726,413000000,413821107,413791635,413813408,413792605,441557000,413990851,413993996,413994153,413778438,413964063,413972701,413807463,413805667,413553620,211169130,413815032,413984455,413960237,413972565,413817671,413767142,413814911,710001245,413802224,413782379,413991934,413802692,413953619,413982917,413993396,211587830,413790495,413778891,413761262,413789937,413793388,413827642,413793707,413975004,413763244,413783711,413972122,413769108,413807215,168,710014660,710001313,413809462,413805604,367514610,413811905,203999329,413803316,261182608,413800085,413828035,413970934,413814759,413769107,710000883,413981314,243070717,413991927,710000973,413775177,413783031,413770863,413771332,710001314,412356789,413817681,413774592,413827614,413781531,413979554,413781444,413769875,413995569,413814361,413974349,413777513,413780046,413769099,413812164,413789405,413789237,413786657,413772188,413784736,413767983,413789315,413767612,367514660,261182601,413824181,211489990,413808987,413854316,710000839,413987084,413814635,413807829,413779619,413695320,413774953,413769351,413964468,413973955,413766868,413819529,413960734,413978027,413820633,412000000,710000919,413819509,413809415,413816961,999123456,413951795,413800928,413809722,413997021,413994826,710000975,413996099,413953783,413793609,413784438,413998899,413977126,413952741,413777022,413823549,211517440,413950336,413827757,413763902,413782395,413960668,413787591,413994086,203999396,413818571)
and lat is not null and lon is not null and timestamp is not null and speed is not null and lat<90 and lat>-90 and lon<180 and lon>-180 and lon !=0 and lat !=0
//save to scratch_david_vesselsPyBossa.vessels_20160331
'''


# these mmsi are in scratch_david_vesselsPyBossa.vessels_20160318
vessels = [267010021,366967640,269057408,367505770,477581600,203999327,413961936,412455390,267168000,366996080,366851250,244660073,345010030,211087743,413779267,367682130,366937040,413766165,244660360,413790909,413979753,413829474,413777098,413521140,413784139,211514140,413893000,413801945,413824096,413823514,808664168,514814000,370170000,366984180,367057370,413831093,413996682,413823601,413790301,413813096,413961301,211512760,413453680,413952938,413806175,413951241,413823918,413819373,413978287,270256000,413778785,413771406,413779089,413794658,413805206,413826012,412553970,413552560,413811461,413953900,413793224,413827421,413803337,413974073,412418190,261186310,413804286,413780051,413827566,412733000,412425010,413792801,312762000,413802174,413826623,413795331,413981938,413973986,413794382,413973417,413770331,372879000,413785998,244660717,413787875,413772055,413812908,413961902,413794909,413818027,413811254,413778851,413760448,413775835,413801647,413953113,244650869,413780352,413077030,413808025,413792522,413777355,413819438,413777417,413812652,441906000,413784964,413760814,413972528,413782376,412357040,413819608,413976243,412502540,413787476,413963568,413783618,413794405,413809739,413808953,413791278,413819096,413855917,413813082,413940365,413615000,211553330,413963997,413791479,413957835,413773228,413964973,413971066,413774853,413964127,413780618,413952638,413815205,413827288,413783337,413794467,413964392,413827735,413973889,413822424,413823538,413768848,413355150,413978527,413821431,413972173,413987031,413850163,413803586,413954433,413819656,413855827,413989907,413965748,413773731,413762495,413812753,413760869,413817683,413980123,412375550,413806165,413772083,413825000,413416390,413829726,413794812,413827195,413973583,412439570,413964028,367611460,413508160,413828525,413353940,413858942,413810047,413821235,413808125,413807196,413801402,413827446,514210000,413816815,413828665,413812924,514438000,413782444,413771745,413829708,371592000,413994615,413817042,413965376,413956467,413787406,413964816,413789105,413787071,413812741,413974748,413821081,413353890,413806878,412502550,413811037,413812138,413986394,413806304,413975862,413783723,413996359,413800616,147258369,227734020,413810013,413811435,413979316,413789725,413784282,566507000,413810716,413780786,413963998,413964935,229623000,244660065,413779775,412112015,371758000,413790959,413507110,413779598,413994693,413794528,538005160,370963000,477434100,413996245,413760471,413807561,413978119,413778444,244670275,413785293,413783957,413700074,413982097,413766754,249058000,413773159,477685900,414093000,413454260,373674000,413956891,413988537,413769838,413980855,900004474,533930000,405000135,412501180,413800049,600008305,413442070,244650959,413764977,413470530,356503000,235654664,412552940,477685200,211514790,538005085,244700114,356779000,412429060,477924000,371558000,366985540,367513420,249300300,203999358,211660140,412760780,366916920,413773674,413984799,367638240,211196560,366985050,211269090,211644170,366991790]

# these mmsi are in scratch_david_vesselsPyBossa.vessels_20160324
vessels = [267210040,477013700,367011830,367143690,366995920,367522240,269057395,203999383,243070609,566179000,710001338,367113150,261186338,211464610,270338000,244870455,477944000,211475510,244710458,211002011,367573410,205512890,367054240,538002999,367653470,477325700,229346000,211171180,211483540,367005180,207261313,366988760,211169330,366963390,367522220,366984350,367327970,367583740,367475560,203999308,366999523,367057590,211624810,244660100,367486280,367399880,367192650,367694640,264163192,205523690,205461590,211661030,244690637,710000748,211482070,369494740,211540890,351674000,269057512,244670089,211629910,244650903,366995310,366995620,304812000,538004181,367168830,269057390,211554300,366996060,211169810,207072342,211190940,269057465,366999521,244790570,211481250,367003540,367143710,211668930,564700000,311050600,261182694,211549520,367343440,211510640,366993020,203999321,211512600,367054810,244670799,267010047,366996710,269064000,243000046,244250702,244670506,367014430,244750134,211515160,477962300,477617300,477963100,211511370,367481570,367533710,267010025,264162519,367600960,367622970,211169540,269057499,211507020,211535890,367575130,366919230,477048000,367641620,211509040,270252000,710000795,261182658,367433690,367396730,244670138,244710505,244670582,211555070,211437690,205408090,215892000,244660546,357262000,538005470,367595840,351696000,205376890,373756000,373886000,367373640,270311000,366967670,367456850,369970732,203999424,212049000,366967080,367451270,355960000,244790016,366963070,211660150,367638080,211623160,249562000,367567350,366799770,367611970,367430210,244750523,211511890,211470290,205347990,636015464,211478990,367324460,244030401,244660885,269057515,366961480,367398930,367402570,211431140,244670841,367092190,279202463,367380840,367561430,227720520,243071717,256897000,636017284,366821510,367532810,211509160,211169870,367004240,311553000,372268000,211309260,576646000,431127000,338188861,710000971,211509240,710001243,211589480,244750808,244630764,295530990,244670374,356927000,367554940,211209890,367374930,269057416,367421590,211633700,211563260,211182740,367456880,367541280,244660746,367622980,636015681,367468610,366963040,205308190,261183490,367687950,211661060,366990030,270461000,203999353,568859,710014660,710001313,367505040,211593640,211512080,369494743,261182698,211492880,367009590,538005483,338168433,538003102,367362240,338099677,244630147,244660036,244730899,367526570,366993510,367456350,367678150,367057840,366967510,367452870,3660684,211483650,211183340,203999352,244660366,243070814,366862710,367402450,367522430,366967460,264162120,3660863,367503760,211183290,238812840,366989950,211449050,367641580,3660554,264163228,253242366,367419040,269057521,203999315,244690277,710001349,211476540,244620284,244650891,279202540,215441000,356345000,642122014,367505110,244670532,210219000,244650899,279202242,267173000,366963490,211430730,264162038,367429570,367471910,367057860,367638250,211660310,272041600,229065000,366984840,256306000]

# these are the vessels in scratch_david_vesselsPyBossa.vessels_20160331
vessels = [413803633,413996548,412100000,412763490,413771358,413791546,413763382,413977032,413768003,413802872,413778834,413826357,356986000,413810079,413779571,211512460,413784842,413996851,413979766,413993056,413995596,413951715,413779313,100900012,538002411,413767172,413975824,367521810,413800072,413791444,308429000,413794697,413761506,413822933,267010070,413996275,123456789,413783129,413793855,413779827,413808539,413764909,413781794,413854231,413772426,413994115,413995231,413775244,412551330,413825119,565062000,413825138,710000759,413567822,413995235,413989465,412354420,413778100,413745689,413789584,413811491,413793159,413779914,413772156,413990301,710000972,413817091,413783354,413767215,413960932,413970908,413979506,413975527,413775463,222222222,413974057,413804598,413775067,413788073,413785698,203999399,413980711,413784866,434164405,413801179,413855589,413793761,413767375,413973471,413776721,413979948,710000649,267010072,413781552,987654321,100000000,413959157,413829271,1193046,413804434,413762034,412441226,367514620,413765853,413800433,413786573,413824089,413994144,710000989,413763573,413777773,413805768,413994409,413812525,413785985,211617370,413987655,413977066,413807081,413996944,338188861,413823907,413773504,211512450,413806725,413793487,710251000,413996066,413789567,413986337,413794627,413989726,413000000,413821107,413791635,413813408,413792605,441557000,413990851,413993996,413994153,413778438,413964063,413972701,413807463,413805667,413553620,211169130,413815032,413984455,413960237,413972565,413817671,413767142,413814911,710001245,413802224,413782379,413991934,413802692,413953619,413982917,413993396,211587830,413790495,413778891,413761262,413789937,413793388,413827642,413793707,413975004,413763244,413783711,413972122,413769108,413807215,168,710014660,710001313,413809462,413805604,367514610,413811905,203999329,413803316,261182608,413800085,413828035,413970934,413814759,413769107,710000883,413981314,243070717,413991927,710000973,413775177,413783031,413770863,413771332,710001314,412356789,413817681,413774592,413827614,413781531,413979554,413781444,413769875,413995569,413814361,413974349,413777513,413780046,413769099,413812164,413789405,413789237,413786657,413772188,413784736,413767983,413789315,413767612,367514660,261182601,413824181,211489990,413808987,413854316,710000839,413987084,413814635,413807829,413779619,413695320,413774953,413769351,413964468,413973955,413766868,413819529,413960734,413978027,413820633,412000000,710000919,413819509,413809415,413816961,999123456,413951795,413800928,413809722,413997021,413994826,710000975,413996099,413953783,413793609,413784438,413998899,413977126,413952741,413777022,413823549,211517440,413950336,413827757,413763902,413782395,413960668,413787591,413994086,203999396,413818571]

for mmsi in vessels:
    print mmsi
    try:
        query_request = bigquery_service.jobs()
        query_data = {
            'query': (
                '''SELECT
                      lat,
                      lon,
                      timestamp,
                      speed
                    FROM
                       [scratch_david_vesselsPyBossa.vessels_20160331]
                    WHERE
                      mmsi ='''+str(mmsi)+'''
                    ORDER BY
                      timestamp ;''')
        }

        query_response = query_request.query(
            projectId='world-fishing-827',
            body=query_data).execute()

        sogs =[]
        timestamps = []
        lats = []
        lons = []
        
        print('Query Results:')
        if 'rows' in query_response:
            for row in query_response['rows']:
                #print row['f'][0]['v']
                lat = round(float(row['f'][0]['v']),5)
                lon = round(float(row['f'][1]['v']),5)
                sog = round(float(row['f'][3]['v']),1)
                t = int(float(row['f'][2]['v']))
                timestamp = datetime.utcfromtimestamp(t)
                sogs.append(sog)
                lats.append(lat)
                lons.append(lon)
                timestamps.append(timestamp)
                #print('\t'.join(field['v'] for field in row['f']))

    except HttpError as err:
        print('Error: {}'.format(err.content))
        raise err

    for y in year_range:
        for m in month_range:
            m_lats = []
            m_lons = []
            m_sogs = []
            m_timestamps = []
            for i in range(len(lats)):
                if timestamps[i].month == m and timestamps[i].year == y:
                    m_lats.append(lats[i])
                    m_lons.append(lons[i])
                    m_timestamps.append(str(timestamps[i]))
                    m_sogs.append(sogs[i])

            if len(m_lats)>100: #has to have at least 100 positions in the month
                js = {}
                js['lats']=m_lats
                js['lons']=m_lons
                js['sogs']=m_sogs
                js['timestamps']=m_timestamps
                # js['type'] = "LineString"
                # js['coordinates'] = [[round(lon,5),round(lat,5)] for lat,lon in zip(lats,lons)] #stupid to have higher than 5 digets
                t = json.dumps(js)
                f = open("../../data/vessels_20160331/"+str(mmsi)+"_"+str(y)+"_"+str(m)+".json",'w')
                f.write(t)
                f.close()
            else:
                print "month: ",m," no values for "+str(mmsi) 

